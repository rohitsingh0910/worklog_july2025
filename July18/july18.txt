ðŸ“Œ Cron Jobs (crontab)

- Cron is used for scheduling tasks in Linux.
- `crontab -e` âžœ edit cron jobs.
- `crontab -l` âžœ list current cron jobs.
- `crontab -r` âžœ remove all cron jobs.

Cron Format:
command
| | | | |
| | | | â””â”€ Day of week (0â€“6)
| | | â””â”€â”€â”€ Month (1â€“12)
| | â””â”€â”€â”€â”€â”€ Day of month (1â€“31)
| â””â”€â”€â”€â”€â”€â”€â”€ Hour (0â€“23)
â””â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Minute (0â€“59)

makefile
Example:
0 5 * * * /home/user/backup.sh # Run daily at 5 AM
*/10 * * * * echo "Hello" >> /tmp/cron.log # Every 10 mins


---

ðŸ“Œ grep (Global Regular Expression Print)

- Used to search patterns in files.
- Example:
  grep "error" log.txt     âžœ find 'error' in log.txt
  grep -i "error" log.txt  âžœ case-insensitive search
  grep -n "error" log.txt  âžœ show line numbers

---

ðŸ“Œ awk

- Used for pattern scanning and text processing.
- Syntax:
  awk '{print $1}' file.txt   âžœ print first column
  awk '/error/ {print $2}' file.txt   âžœ print 2nd column for lines containing 'error'

- awk fields:
  $0 âžœ entire line
  $1 âžœ first field
  $2 âžœ second field, etc.

---

ðŸ“Œ sed (Stream Editor)

- Used for find/replace in files.
- Example:
  sed 's/old/new/' file.txt        âžœ replace first occurrence of 'old' in each line
  sed 's/old/new/g' file.txt       âžœ replace all occurrences
  sed -n '2p' file.txt             âžœ print 2nd line