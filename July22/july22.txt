ðŸ“Œ Looping over Arrays

Declare an array:
arr=(1 2 3 4)

Loop through array elements:
for i in "${arr[@]}"; do
  echo $i
done

Access element by index:
echo ${arr[0]}   # first element
echo ${arr[@]}   # all elements
echo ${#arr[@]}  # number of elements

---

ðŸ“Œ String Manipulation

- `${#str}` âžœ length of string
- `${str:0:5}` âžœ substring (from index 0, length 5)
- `${str/old/new}` âžœ replace first occurrence
- `${str//old/new}` âžœ replace all occurrences

---

ðŸ“Œ Arithmetic Operations

- `let var=expr` âžœ performs arithmetic
- `$(( expr ))` âžœ arithmetic expansion

Examples:
let sum=5+3
echo $sum
echo $((10 * 2 + 5))

---

ðŸ“Œ Debugging with set -x

- Add `set -x` at the start of the script to enable debugging (prints each command before execution).
- Use `set +x` to disable debugging.

Example:
set -x
echo "Debugging this line"
set +x
echo "Debugging stopped"
