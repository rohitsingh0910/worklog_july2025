ðŸ“Œ Command-Line Arguments

- `$0` âžœ script name
- `$1`, `$2`, ... âžœ first, second, etc., arguments
- `$#` âžœ number of arguments
- `$@` âžœ all arguments as a list
- `$*` âžœ all arguments as a single string

Example:
./script.sh arg1 arg2
$1 = arg1
$2 = arg2

ðŸ“Œ Logging

- Logs are useful for debugging or tracking.
- Use `>> logfile.txt` to append output.
- Example:
  echo "Starting script..." >> script.log

- `logger` command can also send messages to syslog:
  logger "Script started"

ðŸ“Œ Error Handling

- `$?` gives the exit status of the last command (0 = success).
- Use `set -e` to exit script on error.
- Use `||` to run a command on failure.

Example:
```bash
cp file1 file2 || echo "Copy failed!"
Trap errors using:

bash
Copy
Edit
trap 'echo "An error occurred."' ERR
yaml
Copy
Edit

---

## ðŸ’» Code Files for `17-july`

---

### âœ… `arguments.sh`
```bash
#!/bin/bash

echo "Script name: $0"
echo "First argument: $1"
echo "Second argument: $2"
echo "All arguments: $@"
echo "Total arguments: $#"